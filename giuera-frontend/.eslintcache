[{"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/index.js":"1","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/App.js":"2","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/reportWebVitals.js":"3","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/SignInPage.js":"4","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/RegisterPage.js":"5","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/HomePage.js":"6","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Dashboard.js":"7","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/NavigBar.js":"8","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/FormPage.js":"9","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/InputBox.js":"10","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/RadioButton.js":"11","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/RadioContainer.js":"12","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/CardsContainer.js":"13","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/DashboardStyles.js":"14","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/InfoBox.js":"15","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Card.js":"16","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Button.js":"17","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Scrollable.js":"18","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Win.js":"19","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/FormStyles.js":"20","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Profile.js":"21","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/CoursesToBuy.js":"22","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Tel.js":"23","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/RateInstructor.js":"24","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Certificate.js":"25"},{"size":500,"mtime":1610700193585,"results":"26","hashOfConfig":"27"},{"size":575,"mtime":1610700193556,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1610700193586,"results":"29","hashOfConfig":"27"},{"size":2559,"mtime":1610736106508,"results":"30","hashOfConfig":"27"},{"size":3914,"mtime":1610776221041,"results":"31","hashOfConfig":"27"},{"size":657,"mtime":1610700193558,"results":"32","hashOfConfig":"27"},{"size":20064,"mtime":1610824824273,"results":"33","hashOfConfig":"27"},{"size":210,"mtime":1610700193558,"results":"34","hashOfConfig":"27"},{"size":451,"mtime":1610700193557,"results":"35","hashOfConfig":"27"},{"size":660,"mtime":1610732958544,"results":"36","hashOfConfig":"27"},{"size":342,"mtime":1610700193557,"results":"37","hashOfConfig":"27"},{"size":286,"mtime":1610700193557,"results":"38","hashOfConfig":"27"},{"size":195,"mtime":1610700193556,"results":"39","hashOfConfig":"27"},{"size":1215,"mtime":1610810655242,"results":"40","hashOfConfig":"27"},{"size":265,"mtime":1610700193557,"results":"41","hashOfConfig":"27"},{"size":307,"mtime":1610700193556,"results":"42","hashOfConfig":"27"},{"size":189,"mtime":1610700193556,"results":"43","hashOfConfig":"27"},{"size":143,"mtime":1610700193557,"results":"44","hashOfConfig":"27"},{"size":211,"mtime":1610700193557,"results":"45","hashOfConfig":"27"},{"size":889,"mtime":1610700193557,"results":"46","hashOfConfig":"27"},{"size":5037,"mtime":1610797851513,"results":"47","hashOfConfig":"27"},{"size":2101,"mtime":1610794209254,"results":"48","hashOfConfig":"27"},{"size":2713,"mtime":1610810865020,"results":"49","hashOfConfig":"27"},{"size":1682,"mtime":1610822172244,"results":"50","hashOfConfig":"27"},{"size":1087,"mtime":1610826302684,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"124hzse",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"54"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"54"},"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/index.js",[],["115","116"],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/App.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/reportWebVitals.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/SignInPage.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/RegisterPage.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/HomePage.js",["117"],"\nimport React from 'react'\nimport './HomePage.css' \nimport {Link} from 'react-router-dom'\n\nclass HomePage extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<>\n\t\t<div className='bg'>\n\t\t\t<div className=\"shade\">\n\t\t\t\t<div class=\"cont\"> \n\t\t\t\t\t\t<h1 className=\"mainPageTitle\">\n\t\t\t\t\t\t\tWELCOME TO GIUERA\n\t\t\t\t\t\t</h1>\n\t\t\t\t</div>\n\n\t\t\t\t<div class=\"cont\"> \n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Link to=\"/signin\">\n\t\t\t\t\t\t\t<button id=\"signInButton\">SIGN IN</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t<Link to=\"/register\">\n\t\t\t\t\t\t\t<button id=\"registerButton\">REGISTER</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t</>\n\t\t)\n\t}\n}\nexport default HomePage","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Dashboard.js",["118","119","120","121","122","123","124","125"],"import React, { useEffect } from \"react\";\nimport CardsContainer from \"./CardsContainer\";\nimport DashboardStyles from \"./DashboardStyles\";\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport InfoBox from \"./InfoBox\";\nimport Scrollable from \"./Scrollable\";\nimport InputBox from \"./../Form/InputBox\";\nimport RadioContainer from \"./../Form/RadioContainer\";\nimport RadioButton from \"./../Form/RadioButton\";\nimport Win from \"./Win\";\nimport Profile from './Profile'\nimport RateInstructor from './RateInstructor'\nimport Certificate from \"./Certificate\";\nimport CoursesToBuy from \"./CoursesToBuy\";\n\nclass Dashboard extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcoursesToBuy: [],\n\t\t\tinstructorAddingCourse: false,\n\t\t\tinstructorAddingAssignment: false,\n\t\t\tpopUpMsg: \"\",\n\t\t\tpopUpVisible: 0,\n\t\t\tcoursePopupVisible: 0,\n\t\t\tpopupCourse: {},\n\t\t\tstudentAssignments: [],\n\t\t\tstudentFeedback: [],\n\t\t\tcourseToEnroll:{},\n\t\t\tnewCourse: {\n\t\t\t\tname: \"\",\n\t\t\t\tdescription: \"\",\n\t\t\t\tcreditHours: 0,\n\t\t\t\tprice: 0.0,\n\t\t\t},\n\t\t\tnewAssignment: {\n\t\t\t\tnumber: 0,\n\t\t\t\ttype: \"\",\n\t\t\t\tfullGrade: 0,\n\t\t\t\tweight: 0,\n\t\t\t\tdeadline: \"\",\n\t\t\t\tcontent: \"\",\n\t\t\t},\n\t\t\tnewFeedBack:{\n\t\t\t\tcomment:'',\n\t\t\t\tcourseid:0,\n\t\t\t\tstudentid:0,\n\t\t\t},\n\t\t\tfeedbackResult:'',\n\t\t\tissueCert: {\n\t\t\t\tid: 0,\n\t\t\t},\n\t\t\tuser: null,\n\t\t\tcourses: [],\n\t\t};\n\n\t\tthis.instructorCourseDetailsFuncs = {\n\t\t\ttoggleAddAssignment: () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinstructorAddingAssignment: !this.state.instructorAddingAssignment,\n\t\t\t\t});\n\t\t\t},\n\t\t\tonStudentIssueCertChange: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState({\n\t\t\t\t\tissueCert: {\n\t\t\t\t\t\tid: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tonNumberChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.number = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonTypeChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.type = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonFullGradeChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.fullGrade = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonWeightChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.weight = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDeadlineChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.deadline = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonContentChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newAssignment.content = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\taddAssignment: async (cid) => {\n\t\t\t\tif (!this.state.newAssignment.number > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Invalid input at number, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this.state.newAssignment.fullGrade > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Invalid input at full grade, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this.state.newAssignment.weight > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Invalid input at weight, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.state.newAssignment.type.trim() === \"\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Type cannot be empty, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.state.newAssignment.content.trim() === \"\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Content cannot be empty, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.state.newAssignment.deadline.trim() === \"\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Deadline cannot be empty, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.instructorCourseDetailsFuncs.toggleAddAssignment();\n\t\t\t\tconst data = {\n\t\t\t\t\tinstructorid: this.props.user.id,\n\t\t\t\t\tcourseid: cid,\n\t\t\t\t\tnumber: this.state.newAssignment.number,\n\t\t\t\t\ttype: this.state.newAssignment.type,\n\t\t\t\t\tfullGrade: this.state.newAssignment.fullGrade,\n\t\t\t\t\tweight: this.state.newAssignment.weight,\n\t\t\t\t\tdeadline: this.state.newAssignment.deadline,\n\t\t\t\t\tcontent: this.state.newAssignment.content,\n\t\t\t\t};\n\t\t\t\tconsole.log(data);\n\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\"http://localhost:3001/defineassignment\",\n\t\t\t\t\trequest\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\n\t\tthis.instructorAddCourseFuncs = {\n\t\t\ttoggleAddCourse: () => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tinstructorAddingCourse: !this.state.instructorAddingCourse,\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonNameChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newCourse.name = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tonDescChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newCourse.description = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonCreditHoursChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newCourse.creditHours = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonPriceChanged: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState((state) => {\n\t\t\t\t\tstate.newCourse.price = event.target.value;\n\t\t\t\t});\n\t\t\t},\n\n\t\t\taddCourse: async () => {\n\t\t\t\tif (!this.state.newCourse.creditHours > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Invalid input at credit hours, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!this.state.newCourse.price > 0) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Invalid input at price, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.state.newCourse.name.trim() === \"\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Name cannot be empty, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.state.newCourse.description.trim() === \"\") {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tpopUpMsg: \"Description cannot be empty, please fix\",\n\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.instructorAddCourseFuncs.toggleAddCourse();\n\t\t\t\tconst data = {\n\t\t\t\t\tcredit_hours: this.state.newCourse.creditHours,\n\t\t\t\t\tinstructorid: this.props.user.id,\n\t\t\t\t\tdescription: this.state.newCourse.description,\n\t\t\t\t\tprice: this.state.newCourse.price,\n\t\t\t\t\tname: this.state.newCourse.name,\n\t\t\t\t};\n\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(\"http://localhost:3001/addcourse\", request);\n\t\t\t\tthis.fetchInstructorCourses();\n\t\t\t},\n\t\t};\n\n\t}\n\n\n\tfetchStudentAssignments = async (cid) => {\n\t\tconst sub = {\n\t\t\tinstructorid: this.props.user.id,\n\t\t\tcourseid: cid,\n\t\t};\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/viewstudentassignments\",\n\t\t\trequest\n\t\t);\n\t\tlet data = await response.json();\n\n\t\tthis.setState({\n\t\t\tstudentAssignments: data.data,\n\t\t});\n\t};\n\n\tfetchStudentFeedback = async (cid) => {\n\t\tconst sub = {\n\t\t\tinstructorid: this.props.user.id,\n\t\t\tcourseid: cid,\n\t\t};\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/viewstudentfeedback\",\n\t\t\trequest\n\t\t);\n\t\tlet data = await response.json();\n\n\t\tthis.setState({\n\t\t\tstudentFeedback: data.data,\n\t\t});\n\t};\n\tfetchStudentCourses = async () => {\n\t\tconst sub = {\n\t\t\tstudentid: this.props.user.id,\n\t\t};\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\"http://localhost:3001/viewenrolled\", request);\n\t\tlet data = await response.json();\n\n\t\tthis.setState({\n\t\t\tcourses: data.courses,\n\t\t});\n\t};\n\n\tfetchInstructorCourses = async () => {\n\t\tconst data = {\n\t\t\tinstructorid: this.props.user.id,\n\t\t};\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(data),\n\t\t};\n\n\t\tconsole.log(JSON.stringify(data));\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/viewacceptedcourses\",\n\t\t\trequest\n\t\t);\n\t\tconst resData = await response.json();\n\n\t\tthis.setState({\n\t\t\tcourses: resData.data,\n\t\t});\n\t};\n\n\tloadProfile = async () => {\n\t\tif (this.props.user.type === 1) {\n\t\t\tthis.fetchInstructorCourses();\n\t\t\tconst sub = {\n\t\t\t\tinstructorid: this.props.user.id,\n\t\t\t};\n\n\t\t\tconst request = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify(sub),\n\t\t\t};\n\n\t\t\tlet response = await fetch(\n\t\t\t\t\"http://localhost:3001/instructorprofile\",\n\t\t\t\trequest\n\t\t\t);\n\t\t\tlet data = await response.json();\n\t\t\tconsole.log();\n\t\t\tthis.setState({\n\t\t\t\tflag: \"\",\n\t\t\t\tuser: {\n\t\t\t\t\ttype:this.props.user.type,\n\t\t\t\t\tid: this.props.user.id,\n\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\tgender: data.gender,\n\t\t\t\t\temail: data.email,\n\t\t\t\t\taddress: data.address,\n\t\t\t\t\trating: data.rating,\n\t\t\t\t},\n\t\t\t});\n\t\t} else if (this.props.user.type === 2) {\n\t\t\tthis.fetchStudentCourses();\n\n\t\t\tconst sub = {\n\t\t\t\tstudentid: this.props.user.id,\n\t\t\t};\n\n\t\t\tconst request = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify(sub),\n\t\t\t};\n\n\t\t\tlet response = await fetch(\n\t\t\t\t\"http://localhost:3001/studentprofile\",\n\t\t\t\trequest\n\t\t\t);\n\t\t\tlet data = await response.json();\n\n\t\t\tthis.setState({\n\t\t\t\tuser: {\n\t\t\t\t\ttype:this.props.user.type,\n\t\t\t\t\tid: this.props.user.id,\n\t\t\t\t\tgpa: data.gpa,\n\t\t\t\t\tfirstName: data.firstName,\n\t\t\t\t\tlastName: data.lastName,\n\t\t\t\t\tgender: data.gender,\n\t\t\t\t\temail: data.email,\n\t\t\t\t\taddress: data.address,\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tnewProfile: {\n\t\t\t\tfirstName: this.state.user.firstName,\n\t\t\t\tlastName: this.state.user.lastName,\n\t\t\t\tgender: this.state.user.gender,\n\t\t\t\temail: this.state.user.email,\n\t\t\t\taddress: this.state.user.address,\n\t\t\t},\n\t\t});\n\t};\n\n\tcomponentDidMount = () => {\n\t\tthis.loadProfile();\n\t};\n\n\tviewCourses = () => {\n\t\treturn this.state.courses.map((course) => (\n\t\t\t<InfoBox\n\t\t\t\tkey={course.cid || course.id}\n\t\t\t\theader={course.name}\n\t\t\t\tsub={\"credit hours:\" + course.creditHours}\n\t\t\t>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.fetchStudentAssignments(course.cid || course.id);\n\t\t\t\t\t\tthis.fetchStudentFeedback(course.cid || course.id);\n\t\t\t\t\t\tthis.setState({ coursePopup: course, coursePopupVisible: true });\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tview\n\t\t\t\t</Button>\n\t\t\t</InfoBox>\n\t\t));\n\t};\n\n\n\n\tinstructorAddCourse = () => {\n\t\treturn (\n\t\t\t<Scrollable>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={this.instructorAddCourseFuncs.onNameChanged}\n\t\t\t\t/>\n\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"description\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={this.instructorAddCourseFuncs.onDescChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"credit hours\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={this.instructorAddCourseFuncs.onCreditHoursChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"price\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={this.instructorAddCourseFuncs.onPriceChanged}\n\t\t\t\t/>\n\n\t\t\t\t<Button onClick={this.instructorAddCourseFuncs.addCourse}>save</Button>\n\t\t\t\t<Button onClick={this.instructorAddCourseFuncs.toggleAddCourse}>\n\t\t\t\t\tcancel\n\t\t\t\t</Button>\n\t\t\t</Scrollable>\n\t\t);\n\t};\n\n\tinstructorCourses = () => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<Button onClick={this.instructorAddCourseFuncs.toggleAddCourse}>\n\t\t\t\t\tadd\n\t\t\t\t</Button>\n\t\t\t\t<Scrollable>{this.viewCourses()}</Scrollable>\n\t\t\t</>\n\t\t);\n\t};\n\n\tcoursePopupGeneral = (course) => {\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<h1>{course.name}</h1>\n\t\t\t\t<h2>ID: {course.id || course.cid}</h2>\n\t\t\t\t<h2>Credit Hours: {course.creditHours}</h2>\n\t\t\t\t{this.props.user.type === 1 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={this.instructorCourseDetailsFuncs.toggleAddAssignment}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tadd assignment\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<h2>Assignments by students</h2>\n\t\t\t\t\t\t{this.state.studentAssignments.map((val) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<h3>Assignment by: {val.sid}</h3>\n\t\t\t\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\t\t\t\tlabel=\"Grade:\"\n\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\tconst list = this.state.studentAssignments;\n\t\t\t\t\t\t\t\t\t\t\tlist[list.indexOf(val)].grade = e.target.value;\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst list = this.state.studentAssignments;\n\t\t\t\t\t\t\t\t\t\t\t\tif (list[list.indexOf(val)].grade > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tinstructorid: this.props.user.id,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcourseid: course.id || course.cid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstudentid: val.sid,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tassignment_number: val.assignmentNumber,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype: val.assignmentType,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgrade: list[list.indexOf(val)].grade,\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\tconst request = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(data);\n\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"http://localhost:3001/gradeassignment\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpopUpMsg: \"Enter valid grade to grade student\",\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tsubmit grade\n\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<h2>Feedback by students</h2>\n\t\t\t\t\t\t{this.state.studentFeedback.map((val) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\t\t<InfoBox header={`feedback no. ${val.number}`}>\n\t\t\t\t\t\t\t\t\t\t<h1>\n\t\t\t\t\t\t\t\t\t\t\t{val.comment}\n\t\t\t\t\t\t\t\t\t\t</h1>\n\n\t\t\t\t\t\t\t\t\t</InfoBox>\n\t\t\t\t\t\t\t\t\t{/* Feedback no: {val.number}/ comment: {val.comment}/ likes:\n\t\t\t\t\t\t\t\t\t{val.numberOfLikes} */}\n\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t\tlabel=\"Issue certificate to student id:\"\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tvalue={this.state.issueCert.id}\n\t\t\t\t\t\t\tonChange={\n\t\t\t\t\t\t\t\tthis.instructorCourseDetailsFuncs.onStudentIssueCertChange\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div style={{ marginTop: 30, marginLeft: 50 }}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tonClick={async () => {\n\t\t\t\t\t\t\t\t\tif (this.state.issueCert.id > 0) {\n\t\t\t\t\t\t\t\t\t\tconst today = new Date();\n\t\t\t\t\t\t\t\t\t\tconst dd = String(today.getDate()).padStart(2, \"0\");\n\t\t\t\t\t\t\t\t\t\tconst mm = String(today.getMonth() + 1).padStart(2, \"0\");\n\t\t\t\t\t\t\t\t\t\tconst yyyy = today.getFullYear();\n\t\t\t\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\t\t\t\tinstructorid: this.props.user.id,\n\t\t\t\t\t\t\t\t\t\t\tcourseid: course.id || course.cid,\n\t\t\t\t\t\t\t\t\t\t\tstudentid: this.state.issueCert.id,\n\t\t\t\t\t\t\t\t\t\t\tissueDate: yyyy + \"-\" + dd + \"-\" + mm,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\tconst request = {\n\t\t\t\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\t\t\t\t\t\t\"http://localhost:3001/issuecertificate\",\n\t\t\t\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tissueCert: {\n\t\t\t\t\t\t\t\t\t\t\t\tid: 0,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\tpopUpMsg: \"Enter valid id to issue certificate to\",\n\t\t\t\t\t\t\t\t\t\t\tpopUpVisible: 1,\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tissue certificate\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t<>\t\t\t\t\t\n\t\t\t\t\t// <h2>IMPLEMENT HERE COURSE DETAILS STUFF FOR STUDNET</h2>\n\t\t\t\t\t<Card header=\"add feedback\">\n\t\t\t\t\t\t<InputBox\n\t\t\t\t\t\t multiline={1} \n\t\t\t\t\t\t txtStyles={{height:'100%',fontSize:'30px'}}\n\t\t\t\t\t\t onChange={\n\t\t\t\t\t\t\t (e)=>(this.setState((state)=>{ \n\t\t\t\t\t\t\t\t state.newFeedBack.comment=e.target.value\n\t\t\t\t\t\t\t\t state.newFeedBack.courseid=course.id || course.cid\n\t\t\t\t\t\t\t\t state.newFeedBack.studentid=this.state.user.id\n\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t >\n\t\t\t\t\t\t </InputBox>\n\t\t\t\t\t\t<Button onClick={async ()=>{\n\n\t\t\t\t\t\t\tlet data = this.state.newFeedBack;\n\n\t\t\t\t\t\t\tconst request = {\n\t\t\t\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t\t\t};\n\t\t\t\n\t\t\t\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\t\t\t\"http://localhost:3001/addfeedback\",\n\t\t\t\t\t\t\t\trequest\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tdata = await response.json()\n\n\t\t\t\t\t\t\t\n\n\t\t\t\t\t\t\tthis.setState({feedbackResult:data.msg})\n\n\n\t\t\t\t\t\t}}>{ (this.state.feedbackResult + \"\") ||'submit'}</Button>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card header=\"course content\">\n\t\t\t\t\t\t{course.content}\t\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card header=\"rate instructor\">\n\t\t\t\t\t\t<RateInstructor iid={course.instructorId} sid={this.state.user.id}/>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card header=\"certificate\">\n\t\t\t\t\t\t<Certificate sid={this.state.user.id} cid={course.id}/>\n\t\t\t\t\t</Card>\n\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</>\n\t\t);\n\t};\n\n\tcoursePopupAddAssign = (cid) => {\n\t\treturn (\n\t\t\t<Scrollable>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Assignment Number\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onNumberChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Assignment Type\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onTypeChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Full Grade\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onFullGradeChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Weight\"\n\t\t\t\t\ttype=\"number\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onWeightChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Deadline\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onDeadlineChanged}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Content\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tonChange={this.instructorCourseDetailsFuncs.onContentChanged}\n\t\t\t\t/>\n\n\t\t\t\t<Button\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.instructorCourseDetailsFuncs.addAssignment(cid);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tsave\n\t\t\t\t</Button>\n\t\t\t\t<Button onClick={this.instructorCourseDetailsFuncs.toggleAddAssignment}>\n\t\t\t\t\tcancel\n\t\t\t\t</Button>\n\t\t\t</Scrollable>\n\t\t);\n\t};\n\n\tcoursePopup = () => {\n\t\tconst course = this.state.coursePopup;\n\t\tif (course === undefined) {\n\t\t\treturn <></>;\n\t\t}\n\t\treturn (\n\t\t\t<Scrollable>\n\t\t\t\t{this.state.instructorAddingAssignment\n\t\t\t\t\t? this.coursePopupAddAssign(course.id || course.cid)\n\t\t\t\t\t: this.coursePopupGeneral(course)}\n\t\t\t</Scrollable>\n\t\t);\n\t};\n\n\tinstructorDashboard = () => {\n\t\treturn (\n\t\t\t<div style={DashboardStyles.bg}>\n\t\t\t\t<h1 style={{ color: \"white\" }}>Welcome, {this.state.user.firstName}</h1>\n\t\t\t\t<CardsContainer>\n\t\t\t\t\t<Win toggle={this.state.coursePopupVisible}>\n\t\t\t\t\t\t{this.coursePopup()}\n\t\t\t\t\t\t<Button onClick={() => this.setState({ coursePopupVisible: 0 })}>\n\t\t\t\t\t\t\tdismiss\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Win>\n\t\t\t\t\t<Win toggle={this.state.popUpVisible}>\n\t\t\t\t\t\t{this.state.popUpMsg}\n\t\t\t\t\t\t<Button onClick={() => this.setState({ popUpVisible: 0 })}>\n\t\t\t\t\t\t\tdismiss\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Win>\n\t\t\t\t\t<Card header=\"my courses\">\n\t\t\t\t\t\t{this.state.instructorAddingCourse\n\t\t\t\t\t\t\t? this.instructorAddCourse()\n\t\t\t\t\t\t\t: this.instructorCourses()}\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card header=\"profile\">\n\t\t\t\t\t\t\t<Profile loadProfile={this.loadProfile} user={this.state.user}/>\n\t\t\t\t\t</Card>\n\t\t\t\t</CardsContainer>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tstudentDashboard = () => {\n\t\treturn (\n\t\t\t<div style={DashboardStyles.bg}>\n\t\t\t\t<h1 style={{ color: \"white\" }}>Welcome, {this.state.user.firstName}</h1>\n\t\t\t\t<CardsContainer>\n\t\t\t\t\t<Win toggle={this.state.coursePopupVisible}>\n\t\t\t\t\t\t{this.coursePopup()}\n\t\t\t\t\t\t<Button onClick={() => this.setState({ coursePopupVisible: 0 })}>\n\t\t\t\t\t\t\tdismiss\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Win>\n\t\t\t\t\t<Win toggle={this.state.popUpVisible}>\n\t\t\t\t\t\t{this.state.popUpMsg}\n\t\t\t\t\t\t<Button onClick={() => this.setState({ popUpVisible: 0 })}>\n\t\t\t\t\t\t\tdismiss\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Win>\n\t\t\t\t\t<Card header=\"my courses\">\n\t\t\t\t\t\t<Scrollable>{this.viewCourses()}</Scrollable>\n\t\t\t\t\t</Card>\n\n\n\n\t\t\t\t\t<Card header=\"profile\">\n\t\t\t\t\t\t\t<Profile loadProfile={this.loadProfile} user={this.state.user}/>\n\t\t\t\t\t</Card>\n\n\n\n\t\t\t\t\t<Card header=\"assignments\">\n\t\t\t\t\t\t<h1>hello world</h1>\n\t\t\t\t\t\tay 7aga\n\t\t\t\t\t</Card>\n\n\t\t\t\t\t<Card header=\"available courses to buy\">\n\t\t\t\t\t\t<CoursesToBuy fetchStudentCourses={this.fetchStudentCourses} user={this.state.user} getEnrolled={()=>(this.state.courses)} />\n\t\t\t\t\t</Card>\n\n\n\n\t\t\t\t</CardsContainer>\n\t\t\t</div>\n\t\t);\n\t};\n\n\trender() {\n\t\tif (this.state.user==null){\n\t\t\treturn <h1>loading</h1>\n\t\t}\n\t\tif (this.props.user.type === 1) {\n\t\t\treturn this.instructorDashboard();\n\t\t}\n\n\t\treturn this.studentDashboard();\n\t}\n}\n\nexport default Dashboard;\n","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/NavigBar.js",["126"],"import React from 'react'\nimport Button from './Dashboard/Button'\nimport './NavigBar.css' \t\n\nconst NavigBar=(props)=>(\n\t\t\t<div className='navigbar'>\n\t\t\t\t{props.children}\n\t\t\t</div>\n\t\t)\n\t\n\nexport default NavigBar","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/FormPage.js",["127","128"],"import React from 'react'\nimport FormStyles from './FormStyles'\nimport InputBox from './InputBox'\n\n\nclass FormPage extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\n\trender(){\n\t\treturn (\n\t\t\t<>\n\t\t\t<div style={FormStyles.bg}>\n\t\t\t\t<h1 className=\"mainPageTitle\" style={FormStyles.header}>{this.props.header}</h1>\n\n\t\t\t\t<form style={FormStyles.form}>\n\t\t\t\t\t{this.props.children}\n\t\t\t\t</form>\n\n\t\t\t</div>\n\t\t\t</>\n\t\t)\n\t}\n}\nexport default FormPage","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/InputBox.js",["129"],"import FormStyles from \"./FormStyles\";\n\nconst InputBox = (props) => (\n\t<>\n\t\t<div style={{...FormStyles.infoBox, ...props.styles}}>\n\t\t\t<label>{props.label}</label>\n\t\t{props.multiline==1? (\n\n\t\t\t<textarea\n\t\t\t\tid={props.id}\n\t\t\t\thtmlFor={props.htmlFor}\n\t\t\t\tstyle={{...FormStyles.inputField,...props.txtStyles}}\n\t\t\t\ttype={props.type}\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tvalue={props.value}\n\t\t\t></textarea>\n\n\t\t) : (\n\n\t\t\t<input\n\t\t\t\tid={props.id}\n\t\t\t\thtmlFor={props.htmlFor}\n\t\t\t\tstyle={{...FormStyles.inputField,...props.txtStyles}}\n\t\t\t\ttype={props.type}\n\t\t\t\tonChange={props.onChange}\n\t\t\t\tvalue={props.value}\n\t\t\t></input>\n\t\t)}\n\n\t\t</div>\n\t</>\n);\n\nexport default InputBox;\n","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/RadioButton.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/RadioContainer.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/CardsContainer.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/DashboardStyles.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/InfoBox.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Card.js",["130"],"import React from 'react'\nimport DashboardStyles from './DashboardStyles'\n\n\nclass Card extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t}\n\n\trender(){\n\t\treturn(\n\t\t<div style={DashboardStyles.card}>\n\t\t\t<h1> {this.props.header} </h1>\n\t\t\t{this.props.children}\n\t\t</div>\n\t\t)\n\t}\n}\nexport default Card","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Button.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Scrollable.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Win.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Form/FormStyles.js",[],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Profile.js",["131","132","133"],"\nimport React from 'react'\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport InfoBox from \"./InfoBox\";\nimport Scrollable from \"./Scrollable\";\nimport InputBox from \"./../Form/InputBox\";\nimport RadioContainer from \"./../Form/RadioContainer\";\nimport RadioButton from \"./../Form/RadioButton\";\nimport Tel from './Tel'\nimport Win from './Win';\n\nclass Profile extends React.Component{\n\n\tconstructor(props){\n\t\t\t\n\t\tsuper(props);\n\t\tthis.state ={ \n\t\t\tuser:null,\n\t\t\tprofileEditFlag: 0,\n\t\t\tmanageTelFlag : 0,\n\t\t\tnewProfile: {\n\t\t\t\tfirstName: \"\",\n\t\t\t\tlastName: \"\",\n\t\t\t\temail: \"\",\n\t\t\t\tpassword: \"\",\n\t\t\t\taddress: \"\",\n\t\t\t\tgender: \"\",\n\t\t\t},\n\t\t};\n\n\t\t\n\t\tthis.profileEditFuncs = {\n\t\t\tonFirstNameChange: (event) => {\n\t\t\t\tconsole.log(this.state);\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\tfirstName: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonLastNameChange: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\tlastName: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonEmailChange: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\temail: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonPasswordChange: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\tpassword: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonAddressChange: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\taddress: event.target.value,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonSelectMale: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\tgender: 0,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\n\t\t\tonSelectFemale: (event) => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tnewProfile: {\n\t\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t\t\tgender: 1,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t},\n\t\t\tchangeProfile: async () => {\n\t\t\t\tthis.profileEditFuncs.toggleProfileEdit();\n\t\t\t\tconst sub = {\n\t\t\t\t\tuserid: this.state.user.id,\n\t\t\t\t\t...this.state.newProfile,\n\t\t\t\t};\n\n\t\t\t\tconsole.log(sub);\n\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(sub),\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\"http://localhost:3001/editprofile\",\n\t\t\t\t\trequest\n\t\t\t\t);\n\t\t\t\t//let data = await response.json();\n\t\t\t\tthis.props.loadProfile();\n\t\t\t},\n\n\t\t\ttoggleProfileEdit: () => {\n\t\t\t\tconsole.log(this.state.profileEditFlag);\n\n\t\t\t\tthis.setState({\n\t\t\t\t\tprofileEditFlag: !this.state.profileEditFlag,\n\t\t\t\t});\n\t\t\t},\n\t\t};\n\n\t}\t\n\tcomponentDidMount = () =>{\n\t\tthis.setState({user:this.props.user})\n\t}\n\n\tprofileView = () => {\n\t\tif (this.state.user==null){\n\t\t\treturn <h1>loading</h1>\n\t\t}\n\n\t\treturn (\n\t\t\t<Scrollable>\n\t\t\t\t{console.log('s:',this.state.user)}\n\t\t\t\t<Button onClick={this.profileEditFuncs.toggleProfileEdit}>edit</Button>\n\t\t\t\t<h2>{this.state.user.firstName + \" \" + this.state.user.lastName}</h2>\n\t\t\t\t<h2>{this.state.user.type === 2 ? \"student\" : \"instructor\"}</h2>\n\t\t\t\t<h2> ID : {this.state.user.id} </h2>\n\t\t\t\t<h2>\n\t\t\t\t\t{\" \"}\n\t\t\t\t\t{this.state.user.type === 2\n\t\t\t\t\t\t? \"GPA : \" + this.state.user.gpa\n\t\t\t\t\t\t: \"rating : \" + this.state.user.rating}\n\t\t\t\t</h2>\n\t\t\t\t<h2>Email: {this.state.user.email}</h2>\n\t\t\t\t<h2>Gender: {!this.state.user.gender ? \"Male\" : \"Female\"}</h2>\n\t\t\t\t<h2>Address: {this.state.user.address}</h2>\n\t\t\t</Scrollable>\n\t\t);\n\t};\n\n\tprofileEdit = () => {\n\t\treturn (\n\t\t\t<Scrollable>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"first name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.newProfile.firstName}\n\t\t\t\t\tonChange={this.profileEditFuncs.onFirstNameChange}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"last name\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.newProfile.lastName}\n\t\t\t\t\tonChange={this.profileEditFuncs.onLastNameChange}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"email\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.newProfile.email}\n\t\t\t\t\tonChange={this.profileEditFuncs.onEmailChange}\n\t\t\t\t/>\n\n\t\t\t\t<Button onClick={()=>{\n\t\t\t\t\tthis.setState({ manageTelFlag:1})\n\t\t\t\t}}>tel. numbers</Button>\n\n\t\t\t\t<Win toggle={this.state.manageTelFlag}>\n\t\t\t\t\t<h1>telephone numbers</h1>\n\t\t\t\t\t<Tel user={this.state.user}/>\n\t\t\t\t\t<Button onClick={()=>(this.setState({\n\t\t\t\t\t\tmanageTelFlag:0\n\t\t\t\t\t}))}>dismiss</Button>\n\t\t\t\t</Win >\n\n\t\t\t\t<RadioContainer label=\"gender\">\n\t\t\t\t\t<RadioButton\n\t\t\t\t\t\tlabel=\"male\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tonChange={this.profileEditFuncs.onSelectMale}\n\t\t\t\t\t></RadioButton>\n\t\t\t\t\t<RadioButton\n\t\t\t\t\t\tlabel=\"female\"\n\t\t\t\t\t\tname=\"gender\"\n\t\t\t\t\t\tonChange={this.profileEditFuncs.onSelectFemale}\n\t\t\t\t\t></RadioButton>\n\t\t\t\t</RadioContainer>\n\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"Address\"\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tvalue={this.state.newProfile.address}\n\t\t\t\t\tonChange={this.profileEditFuncs.onAddressChange}\n\t\t\t\t/>\n\t\t\t\t<InputBox\n\t\t\t\t\tlabel=\"password\"\n\t\t\t\t\ttype=\"password\"\n\t\t\t\t\tonChange={this.profileEditFuncs.onPasswordChange}\n\t\t\t\t/>\n\n\t\t\t\t<Button onClick={this.profileEditFuncs.changeProfile}>save</Button>\n\t\t\t\t<Button onClick={this.profileEditFuncs.toggleProfileEdit}>\n\t\t\t\t\tcancel\n\t\t\t\t</Button>\n\t\t\t</Scrollable>\n\t\t);\n\t};\n\n\t\t\n\t\n\trender = () => (\n\t\t\tthis.state.profileEditFlag ? this.profileEdit() : this.profileView()\n\t)\n\n}\n\nexport default Profile;","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/CoursesToBuy.js",["134","135","136","137"],"import React from 'react'\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport InfoBox from \"./InfoBox\";\nimport Scrollable from \"./Scrollable\";\nimport InputBox from \"./../Form/InputBox\";\nimport RadioContainer from \"./../Form/RadioContainer\";\nimport RadioButton from \"./../Form/RadioButton\";\n\n\nclass CoursesToBuy extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state={\n\t\t\tuser:null,\n\t\t\tnewEnroll:{},\n\t\t\tcoursesToBuy:null,\n\t\t}\n\n\n\t}\n\n\tfetchCoursesToBuy = async () => {\n\t\tlet response = await fetch(\"http://localhost:3001/availablecourses\");\n\t\tlet data = await response.json();\n\t\tlet existingCourseIDs = this.props.getEnrolled().map((course) => course.id);\n\t\tlet ctb = data.recordset.filter(\n\t\t\t\t(course) => !existingCourseIDs.includes(course.id)\n\t\t\t)\n\t\tthis.setState({\n\t\t\tcoursesToBuy: ctb,\n\t\t})\n\n\t}\n\n\t\n\tcomponentDidMount = () => {\n\t\tthis.fetchCoursesToBuy();\n\t\tthis.setState({\n\t\t\tuser:this.props.user,\n\t\t})\n\n\t}\n\n\tenrollInCourse  = async (course) =>{\n\n\t\tthis.setState({coursesToBuy:null,enrolled:null})\n\n\t\tlet sub = {\n\t\t\tcourseid : course.id,\n\t\t\tstudentid : this.state.user.id,\n\t\t\tinstructorid : course.instructorId\n\t\t}\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\"http://localhost:3001/enrollincourse\",request);\n\n\t\tlet data = await response.json()\n\n\t\tthis.fetchCoursesToBuy();\n\t\tthis.props.fetchStudentCourses();\n\t\tcourse.enrollResult = data.msg;\n\n\n\n\t}\n\n\tviewCoursesToBuy = () => {\n\t\tconsole.log(this.state.coursesToBuy);\n\t\treturn this.state.coursesToBuy.map((course) => (\n\t\t\t<InfoBox\n\t\t\t\tkey={course.id}\n\t\t\t\theader={course.name}\n\t\t\t\tsub={\"credit hours:\" + course.creditHours}\n\t\t\t>\n\t\t\t\t<p>{course.courseDescription}</p>\n\t\t\t\t<Button onClick={()=>{\n\t\t\t\t\tthis.enrollInCourse(course)\t\t\t\t\t\t\t\t\n\t\t\t\t}}>enroll</Button>\n\t\t\t</InfoBox>\n\t\t));\n\t};\n\n\trender=()=>{\n\t\tif ( this.state.user==null || this.state.coursesToBuy==null){\n\t\t\treturn <h1>loading</h1>\n\t\t}\n\n\t\t\n\t\treturn(\n\t\t<Scrollable>\n\t\t\t{this.viewCoursesToBuy()}\n\t\t</Scrollable>\n\t\t)\n\t}\n}\n\n\nexport default CoursesToBuy","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Tel.js",["138","139","140","141"],"import React from 'react'\nimport DashboardStyles from './DashboardStyles'\nimport InfoBox from './InfoBox'\nimport InputBox from './../Form/InputBox'\nimport Button from './Button'\nimport Scrollable from './Scrollable'\nclass Tel extends React.Component{\n\n\t\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state ={ \n\t\t\taddNewMobileFlag:0,\n\t\t\tduplicateError:0,\n\t\t\temptyError:0,\n\t\t\tuser : this.props.user,\n\t\t\tmobileNumber:'',\n\t\t\trecordset:null,\n\t\t};\n\t\t\n\t}\n\n\tfetchNums= async () =>{\n\n\t\tconst sub = {\n\t\t\tid : this.state.user.id,\n\t\t};\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/viewmobile\",\n\t\t\trequest\n\t\t);\n\n\t\tlet data = await response.json();\n\n\t\tthis.setState({recordset : data.recordset})\n\n\t}\n\n\taddNum= async () =>{\n\n\t\tif (this.state.duplicateError || this.state.emptyError){\n\t\t\tthis.setState({\n\t\t\t\tduplicateError:0,\n\t\t\t\temptyError:0\n\t\t\t})\n\t\t}\n\t\n\n\t\tconst sub = {\n\t\t\tid : this.state.user.id,\n\t\t\tmobileNumber : this.state.mobileNumber\n\t\t};\n\n\t\tif (sub.mobileNumber=='') {\n\t\t\tthis.setState({emptyError:1})\n\t\t\treturn;\n\t\t}\n\n\t\telse if (this.state.recordset.map(r=>r.mobileNumber).includes(sub.mobileNumber)) {\n\t\t\tthis.setState({duplicateError:1})\n\t\t\treturn;\n\t\t}\n\n\n\t\tconsole.log('ADD:',sub)\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(sub),\n\t\t};\n\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/addmobile\",\n\t\t\trequest\n\t\t);\n\n\t\t\n\t\tthis.fetchNums();\n\t}\n\n\t\n\tremoveNum= async (num) =>{\n\t\tconsole.log(\"Ciridsu \",num)\n\n\t\tconst request = {\n\t\t\tmethod: \"POST\",\n\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\tbody: JSON.stringify(num),\n\t\t};\n\n\t\tlet response = await fetch(\n\t\t\t\"http://localhost:3001/removemobile\",\n\t\t\trequest\n\t\t);\n\n\t\tthis.fetchNums();\n\n\t}\n\n\tcomponentDidMount(){\n\t\tthis.fetchNums()\n\t}\n\n\tviewNums = () =>(\n\t\tthis.state.recordset.map(\n\t\t\tnum=>(\n\t\t\t\t <InfoBox key={num.mobileNumber}> \n\t\t\t\t\t <h1>{num.mobileNumber}</h1>\n\t\t\t\t\t<Button onClick={()=>{this.removeNum(num)}} >delete</Button>\n\t\t\t\t </InfoBox>\n\t\t\t)\n\t\t)\n\t)\n\n\n\trender = () => {\n\n\t\tif (this.state.recordset==null || this.props.user==null){\n\t\t\treturn <h1>loading</h1>\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{this.state.duplicateError? <h1 style={{color:'tomato'}}>ERROR : cannot add an existing number again</h1> : <></>}\n\t\t\t\t{this.state.emptyError? <h1 style={{color:'tomato'}}>ERROR : field must not be empty</h1> : <></>}\n\t\t\t\t<Scrollable>\n\t\t\t\t\t{this.viewNums()}\n\t\t\t\t\t\n\t\t\t\t</Scrollable>\n\t\t\t\t<InputBox onChange={(e)=>(this.setState({mobileNumber:e.target.value}))}/>\n\t\t\t\t\t<Button onClick={this.addNum} >add tel.</Button>\n\t\t\t</>\n\t\t);\n\n\t}\n\n}\n\nexport default Tel;",["142","143"],"/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/RateInstructor.js",["144","145","146","147"],"import React from 'react'\nimport Card from \"./Card\";\nimport Button from \"./Button\";\nimport InfoBox from \"./InfoBox\";\nimport Scrollable from \"./Scrollable\";\nimport InputBox from \"../Form/InputBox\";\nimport RadioContainer from \"../Form/RadioContainer\";\nimport RadioButton from \"../Form/RadioButton\";\n\n\nclass RateInstructor extends React.Component{\n\tconstructor(props){\n\t\tsuper(props)\n\n\t\tthis.state = {\n\t\t\trate:null,\n\t\t\tmsg:'',\n\t\t}\n\n\n\t}\n\t\tsubmitRate = async () => {\n\t\t\tif (this.state.rate==null){\n\t\t\t\tthis.setState({msg : 'error, please choose a value for rating'})\n\t\t\t\treturn\n\t\t\t}\n\n\n\t\t\tthis.setState({msg : ''}) \n\n\t\t\tlet sub = {\n\t\t\t\tiid : this.props.iid,\n\t\t\t\tsid : this.props.sid,\n\t\t\t\trate : this.state.rate,\n\t\t\t}\n\n\t\t\tconst request = {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify(sub),\n\t\t\t};\n\n\t\t\tlet response = await fetch(\n\t\t\t\t\"http://localhost:3001/rateinstructor\",\n\t\t\t\trequest\n\t\t\t);\n\n\t\t\tlet data = await response.json()\n\t\t\tthis.setState({msg:data.msg})\n\n\t\t}\n\n\trender=()=>{\n\t\treturn(\n\t\t<>\n\t\t<h1>{this.state.msg}</h1>\n\t\t<RadioContainer>\n\t\t\t<RadioButton name='rate' label='1' onChange={()=>{\n\t\t\t\tthis.setState({rate:1})\n\t\t\t}} />\t\n\t\t\t<RadioButton name='rate' label='2' onChange={()=>{\n\t\t\t\tthis.setState({rate:2})\n\t\t\t}} />\t\n\t\t\t<RadioButton name='rate' label='3' onChange={()=>{\n\t\t\t\tthis.setState({rate:3})\n\t\t\t}} />\t\n\t\t\t<RadioButton name='rate' label='4' onChange={()=>{\n\t\t\t\tthis.setState({rate:4})\n\t\t\t}} />\t\n\t\t\t<RadioButton name='rate' label='5' onChange={()=>{\n\t\t\t\tthis.setState({rate:5})\n\t\t\t}} />\t\n\n\t\t</RadioContainer>\n\t\t<Button onClick={()=>(\n\t\t\tthis.submitRate()\n\t\t)}>rate</Button>\n\t\t</>\n\n\t\t)\n\t}\n}\n\n\nexport default RateInstructor","/Users/fakhry/projs/GIU-DB02/giuera-frontend/src/Dashboard/Certificate.js",["148"],"import React from 'react'\n\n\nclass Certificate extends React.Component{\n\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state={\n\t\t\trecordset:null,\n\t\t}\n\t}\n\n\tfetchCertificate= async ()=>{\n\n\t\t\tconst sub= {\n\t\t\t\tsid:this.props.sid,\n\t\t\t\tcid:this.props.cid,\n\t\t\t}\n\n\t\t\t\tconst request = {\n\t\t\t\t\tmethod: \"POST\",\n\t\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\t\tbody: JSON.stringify(sub),\n\t\t\t\t};\n\n\t\t\t\tlet response = await fetch(\n\t\t\t\t\t\"http://localhost:3001/viewcertificate\",\n\t\t\t\t\trequest\n\t\t\t\t);\n\n\t\t\t\tlet data = await response.json()\n\t\t\t\tthis.setState({recordset:data.recordset})\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.fetchCertificate()\n\t}\n\n\trender(){\n\t\tif (this.state.recordset==null){\n\t\t\treturn(\n\t\t\t\t<h1>loading</h1>\n\t\t\t)\n\t\t}\n\n\t\tif (this.state.recordset.length==0){\n\t\t\treturn(\n\t\t\t\t<h1>not yet certified</h1>\n\t\t\t)\n\t\t}\n\n\t\tif (this.state.recordset.length){\n\t\t\treturn(\n\t\t\t\t<>\n\t\t\t\t\t<h1 style={{color:'#22ff22'}}>congrats! you are certified in this course</h1>\n\t\t\t\t\t<h2 style={{color:'green'}}>issue date : {this.state.recordset[0].issuedate}</h2>\n\t\t\t\t</>\n\t\t\t)\n\t\t}\n\n\n\t}\n}\nexport default Certificate",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":7,"column":2,"nodeType":"155","messageId":"156","endLine":9,"endColumn":3},{"ruleId":"157","severity":1,"message":"158","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":26},{"ruleId":"157","severity":1,"message":"161","line":9,"column":8,"nodeType":"159","messageId":"160","endLine":9,"endColumn":22},{"ruleId":"157","severity":1,"message":"162","line":10,"column":8,"nodeType":"159","messageId":"160","endLine":10,"endColumn":19},{"ruleId":"157","severity":1,"message":"163","line":170,"column":9,"nodeType":"159","messageId":"160","endLine":170,"endColumn":17},{"ruleId":"157","severity":1,"message":"163","line":255,"column":9,"nodeType":"159","messageId":"160","endLine":255,"endColumn":17},{"ruleId":"157","severity":1,"message":"163","line":541,"column":18,"nodeType":"159","messageId":"160","endLine":541,"endColumn":26},{"ruleId":"157","severity":1,"message":"163","line":602,"column":15,"nodeType":"159","messageId":"160","endLine":602,"endColumn":23},{"ruleId":"164","severity":1,"message":"165","line":624,"column":7,"nodeType":"166","endLine":625,"endColumn":9},{"ruleId":"157","severity":1,"message":"167","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":14},{"ruleId":"157","severity":1,"message":"168","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":16},{"ruleId":"153","severity":1,"message":"154","line":8,"column":2,"nodeType":"155","messageId":"156","endLine":10,"endColumn":3},{"ruleId":"169","severity":1,"message":"170","line":7,"column":19,"nodeType":"171","messageId":"172","endLine":7,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":7,"column":2,"nodeType":"155","messageId":"156","endLine":9,"endColumn":3},{"ruleId":"157","severity":1,"message":"173","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":12},{"ruleId":"157","severity":1,"message":"174","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":112,"column":9,"nodeType":"159","messageId":"160","endLine":112,"endColumn":17},{"ruleId":"157","severity":1,"message":"173","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":12},{"ruleId":"157","severity":1,"message":"168","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":16},{"ruleId":"157","severity":1,"message":"161","line":7,"column":8,"nodeType":"159","messageId":"160","endLine":7,"endColumn":22},{"ruleId":"157","severity":1,"message":"162","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":19},{"ruleId":"157","severity":1,"message":"175","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":23},{"ruleId":"169","severity":1,"message":"170","line":61,"column":23,"nodeType":"171","messageId":"172","endLine":61,"endColumn":25},{"ruleId":"157","severity":1,"message":"163","line":80,"column":7,"nodeType":"159","messageId":"160","endLine":80,"endColumn":15},{"ruleId":"157","severity":1,"message":"163","line":99,"column":7,"nodeType":"159","messageId":"160","endLine":99,"endColumn":15},{"ruleId":"149","replacedBy":"176"},{"ruleId":"151","replacedBy":"177"},{"ruleId":"157","severity":1,"message":"173","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":12},{"ruleId":"157","severity":1,"message":"174","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":15},{"ruleId":"157","severity":1,"message":"178","line":5,"column":8,"nodeType":"159","messageId":"160","endLine":5,"endColumn":18},{"ruleId":"157","severity":1,"message":"168","line":6,"column":8,"nodeType":"159","messageId":"160","endLine":6,"endColumn":16},{"ruleId":"169","severity":1,"message":"170","line":46,"column":34,"nodeType":"171","messageId":"172","endLine":46,"endColumn":36},"no-native-reassign",["179"],"no-negated-in-lhs",["180"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'RadioContainer' is defined but never used.","'RadioButton' is defined but never used.","'response' is assigned a value but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","'Button' is defined but never used.","'InputBox' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Card' is defined but never used.","'InfoBox' is defined but never used.","'DashboardStyles' is defined but never used.",["179"],["180"],"'Scrollable' is defined but never used.","no-global-assign","no-unsafe-negation"]