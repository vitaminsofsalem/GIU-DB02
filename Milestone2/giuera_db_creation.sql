CREATE DATABASE GIUERA
USE GIUERA


CREATE TABLE Users(
	id INT IDENTITY(1,1) PRIMARY KEY,
	firstName VARCHAR(20),
	lastName  VARCHAR(20),
	password VARCHAR(20),
	gender BIT,
	email VARCHAR(50) UNIQUE,
	address VARCHAR(10),
);


CREATE TABLE UserMobileNumber(
	mobileNumber VARCHAR(20),
	id INT FOREIGN KEY REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(mobileNumber,id)
);

CREATE TABLE Instructor(
	id INT PRIMARY KEY FOREIGN KEY REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE,
	rating DECIMAL(2,1)
);


CREATE TABLE Student(
	id INT PRIMARY KEY FOREIGN KEY REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE,
	gpa DECIMAL(3,2)
);


CREATE TABLE Admin(
	id INT PRIMARY KEY FOREIGN KEY REFERENCES Users(id) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE Course(
	id INT IDENTITY(1,1) PRIMARY KEY,
	creditHours INT,
	name VARCHAR(10),
	courseDescription VARCHAR(200),
	price DECIMAL(6,2),
	content VARCHAR(200),
	accepted BIT,
	adminId INT FOREIGN KEY REFERENCES Admin(id) ON DELETE SET NULL ON UPDATE CASCADE,
	instructorId INT FOREIGN KEY REFERENCES Instructor(id) ON DELETE NO ACTION ON UPDATE NO ACTION, --Has to be no action, else it will go into cascade loop
);


CREATE TABLE Assignment(
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	number INT,
	type VARCHAR(10),
	fullGrade INT,
	weight DECIMAL(4,1),
	deadline DATETIME,
	content VARCHAR(200),
	PRIMARY KEY(cid,number,type)
);

CREATE TABLE Feedback(
	number INT IDENTITY(1,1),
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	numberOfLikes INT,
	comment VARCHAR(100),
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE NO ACTION ON UPDATE NO ACTION, --Has to be no action, else it will go into cascade loop
    PRIMARY KEY(cid,number)
);

CREATE TABLE Promocode(
	code VARCHAR(6) PRIMARY KEY,
	issueDate DATETIME,
	expiryDate DATETIME,
	discountAmount DECIMAL(4,2),
	adminID INT FOREIGN KEY REFERENCES Admin(id) ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE TABLE StudentHasPromocode(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	code VARCHAR(6) FOREIGN KEY REFERENCES Promocode(code) ON DELETE NO ACTION ON UPDATE NO ACTION,
	PRIMARY KEY(sid,code)
);

CREATE TABLE CreditCard(
	number VARCHAR(15) PRIMARY KEY,
	cardHolderName VARCHAR(16),
	expiryDate DATETIME,
	cvv VARCHAR(3)
);

CREATE TABLE StudentAddCreditCard(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	creditCardNumber VARCHAR(15) FOREIGN KEY REFERENCES CreditCard(number) ON DELETE CASCADE ON UPDATE CASCADE,
	PRIMARY KEY(sid, creditCardNumber)
);

CREATE TABLE StudentTakeCourse(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
	instId INT FOREIGN KEY REFERENCES Instructor(id),
	payedfor BIT,
	grade DECIMAL(10,2),
	PRIMARY KEY(sid,cid,instId)
);

CREATE TABLE StudentTakeAssignment(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	assignmentNumber INT,
	cid INT,
	assignmentType VARCHAR(10),
	grade DECIMAL(5,2),
	FOREIGN KEY (cid, assignmentNumber, assignmentType) REFERENCES Assignment(cid, number,type) ON DELETE NO ACTION ON UPDATE NO ACTION,
	PRIMARY KEY(sid,assignmentNumber,cid,assignmentType)
);

CREATE TABLE StudentRateInstructor(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
	instId INT FOREIGN KEY REFERENCES Instructor(id) ON DELETE CASCADE ON UPDATE CASCADE,
	rate DECIMAL(2,1),
	PRIMARY KEY(sid,instId)
);

CREATE TABLE StudentCertifyCourse(
	sid INT FOREIGN KEY REFERENCES Student(id) ON DELETE CASCADE ON UPDATE CASCADE,
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
	issueDate DATETIME,
	PRIMARY KEY(sid,cid)
);

CREATE TABLE CoursePrerequisiteCourse(
	prerequisteId INT FOREIGN KEY REFERENCES Course(id) ON DELETE CASCADE ON UPDATE CASCADE,
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
	PRIMARY KEY(prerequisteId,cid)
);

CREATE TABLE InstructorTeachCourse(
	instId INT FOREIGN KEY REFERENCES Instructor(id) ON DELETE CASCADE ON UPDATE CASCADE,
	cid INT FOREIGN KEY REFERENCES Course(id) ON DELETE NO ACTION ON UPDATE NO ACTION,
	PRIMARY KEY(instId,cid)
);





